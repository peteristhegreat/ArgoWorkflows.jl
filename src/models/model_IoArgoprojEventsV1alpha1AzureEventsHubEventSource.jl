# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.AzureEventsHubEventSource

    IoArgoprojEventsV1alpha1AzureEventsHubEventSource(;
        filter=nothing,
        fqdn=nothing,
        hubName=nothing,
        metadata=nothing,
        sharedAccessKey=nothing,
        sharedAccessKeyName=nothing,
    )

    - filter::IoArgoprojEventsV1alpha1EventSourceFilter
    - fqdn::String
    - hubName::String
    - metadata::Dict{String, String}
    - sharedAccessKey::IoK8sApiCoreV1SecretKeySelector
    - sharedAccessKeyName::IoK8sApiCoreV1SecretKeySelector
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1AzureEventsHubEventSource <: OpenAPI.APIModel
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceFilter }
    fqdn::Union{Nothing, String} = nothing
    hubName::Union{Nothing, String} = nothing
    metadata::Union{Nothing, Dict{String, String}} = nothing
    sharedAccessKey = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    sharedAccessKeyName = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }

    function IoArgoprojEventsV1alpha1AzureEventsHubEventSource(filter, fqdn, hubName, metadata, sharedAccessKey, sharedAccessKeyName, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1AzureEventsHubEventSource, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1AzureEventsHubEventSource, Symbol("fqdn"), fqdn)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1AzureEventsHubEventSource, Symbol("hubName"), hubName)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1AzureEventsHubEventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1AzureEventsHubEventSource, Symbol("sharedAccessKey"), sharedAccessKey)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1AzureEventsHubEventSource, Symbol("sharedAccessKeyName"), sharedAccessKeyName)
        return new(filter, fqdn, hubName, metadata, sharedAccessKey, sharedAccessKeyName, )
    end
end # type IoArgoprojEventsV1alpha1AzureEventsHubEventSource

const _property_types_IoArgoprojEventsV1alpha1AzureEventsHubEventSource = Dict{Symbol,String}(Symbol("filter")=>"IoArgoprojEventsV1alpha1EventSourceFilter", Symbol("fqdn")=>"String", Symbol("hubName")=>"String", Symbol("metadata")=>"Dict{String, String}", Symbol("sharedAccessKey")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("sharedAccessKeyName")=>"IoK8sApiCoreV1SecretKeySelector", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1AzureEventsHubEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1AzureEventsHubEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1AzureEventsHubEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1AzureEventsHubEventSource }, name::Symbol, val)
end
