# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.TTLStrategy
TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed

    IoArgoprojWorkflowV1alpha1TTLStrategy(;
        secondsAfterCompletion=nothing,
        secondsAfterFailure=nothing,
        secondsAfterSuccess=nothing,
    )

    - secondsAfterCompletion::Int64 : SecondsAfterCompletion is the number of seconds to live after completion
    - secondsAfterFailure::Int64 : SecondsAfterFailure is the number of seconds to live after failure
    - secondsAfterSuccess::Int64 : SecondsAfterSuccess is the number of seconds to live after success
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1TTLStrategy <: OpenAPI.APIModel
    secondsAfterCompletion::Union{Nothing, Int64} = nothing
    secondsAfterFailure::Union{Nothing, Int64} = nothing
    secondsAfterSuccess::Union{Nothing, Int64} = nothing

    function IoArgoprojWorkflowV1alpha1TTLStrategy(secondsAfterCompletion, secondsAfterFailure, secondsAfterSuccess, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1TTLStrategy, Symbol("secondsAfterCompletion"), secondsAfterCompletion)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1TTLStrategy, Symbol("secondsAfterFailure"), secondsAfterFailure)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1TTLStrategy, Symbol("secondsAfterSuccess"), secondsAfterSuccess)
        return new(secondsAfterCompletion, secondsAfterFailure, secondsAfterSuccess, )
    end
end # type IoArgoprojWorkflowV1alpha1TTLStrategy

const _property_types_IoArgoprojWorkflowV1alpha1TTLStrategy = Dict{Symbol,String}(Symbol("secondsAfterCompletion")=>"Int64", Symbol("secondsAfterFailure")=>"Int64", Symbol("secondsAfterSuccess")=>"Int64", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1TTLStrategy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1TTLStrategy[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1TTLStrategy)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1TTLStrategy }, name::Symbol, val)
end
