# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.WorkflowLintRequest

    IoArgoprojWorkflowV1alpha1WorkflowLintRequest(;
        namespace=nothing,
        workflow=nothing,
    )

    - namespace::String
    - workflow::IoArgoprojWorkflowV1alpha1Workflow
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1WorkflowLintRequest <: OpenAPI.APIModel
    namespace::Union{Nothing, String} = nothing
    workflow = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1Workflow }

    function IoArgoprojWorkflowV1alpha1WorkflowLintRequest(namespace, workflow, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1WorkflowLintRequest, Symbol("namespace"), namespace)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1WorkflowLintRequest, Symbol("workflow"), workflow)
        return new(namespace, workflow, )
    end
end # type IoArgoprojWorkflowV1alpha1WorkflowLintRequest

const _property_types_IoArgoprojWorkflowV1alpha1WorkflowLintRequest = Dict{Symbol,String}(Symbol("namespace")=>"String", Symbol("workflow")=>"IoArgoprojWorkflowV1alpha1Workflow", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1WorkflowLintRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1WorkflowLintRequest[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1WorkflowLintRequest)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1WorkflowLintRequest }, name::Symbol, val)
end
