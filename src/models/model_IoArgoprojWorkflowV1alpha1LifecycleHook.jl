# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.LifecycleHook

    IoArgoprojWorkflowV1alpha1LifecycleHook(;
        arguments=nothing,
        expression=nothing,
        template=nothing,
        templateRef=nothing,
    )

    - arguments::IoArgoprojWorkflowV1alpha1Arguments
    - expression::String : Expression is a condition expression for when a node will be retried. If it evaluates to false, the node will not be retried and the retry strategy will be ignored
    - template::String : Template is the name of the template to execute by the hook
    - templateRef::IoArgoprojWorkflowV1alpha1TemplateRef
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1LifecycleHook <: OpenAPI.APIModel
    arguments = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1Arguments }
    expression::Union{Nothing, String} = nothing
    template::Union{Nothing, String} = nothing
    templateRef = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1TemplateRef }

    function IoArgoprojWorkflowV1alpha1LifecycleHook(arguments, expression, template, templateRef, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1LifecycleHook, Symbol("arguments"), arguments)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1LifecycleHook, Symbol("expression"), expression)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1LifecycleHook, Symbol("template"), template)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1LifecycleHook, Symbol("templateRef"), templateRef)
        return new(arguments, expression, template, templateRef, )
    end
end # type IoArgoprojWorkflowV1alpha1LifecycleHook

const _property_types_IoArgoprojWorkflowV1alpha1LifecycleHook = Dict{Symbol,String}(Symbol("arguments")=>"IoArgoprojWorkflowV1alpha1Arguments", Symbol("expression")=>"String", Symbol("template")=>"String", Symbol("templateRef")=>"IoArgoprojWorkflowV1alpha1TemplateRef", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1LifecycleHook }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1LifecycleHook[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1LifecycleHook)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1LifecycleHook }, name::Symbol, val)
end
