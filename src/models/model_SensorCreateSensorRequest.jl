# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""sensor.CreateSensorRequest

    SensorCreateSensorRequest(;
        createOptions=nothing,
        namespace=nothing,
        sensor=nothing,
    )

    - createOptions::IoK8sApimachineryPkgApisMetaV1CreateOptions
    - namespace::String
    - sensor::IoArgoprojEventsV1alpha1Sensor
"""
Base.@kwdef mutable struct SensorCreateSensorRequest <: OpenAPI.APIModel
    createOptions = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1CreateOptions }
    namespace::Union{Nothing, String} = nothing
    sensor = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1Sensor }

    function SensorCreateSensorRequest(createOptions, namespace, sensor, )
        OpenAPI.validate_property(SensorCreateSensorRequest, Symbol("createOptions"), createOptions)
        OpenAPI.validate_property(SensorCreateSensorRequest, Symbol("namespace"), namespace)
        OpenAPI.validate_property(SensorCreateSensorRequest, Symbol("sensor"), sensor)
        return new(createOptions, namespace, sensor, )
    end
end # type SensorCreateSensorRequest

const _property_types_SensorCreateSensorRequest = Dict{Symbol,String}(Symbol("createOptions")=>"IoK8sApimachineryPkgApisMetaV1CreateOptions", Symbol("namespace")=>"String", Symbol("sensor")=>"IoArgoprojEventsV1alpha1Sensor", )
OpenAPI.property_type(::Type{ SensorCreateSensorRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SensorCreateSensorRequest[name]))}

function check_required(o::SensorCreateSensorRequest)
    true
end

function OpenAPI.validate_property(::Type{ SensorCreateSensorRequest }, name::Symbol, val)
end
