# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Stream_result_of_io_argoproj_workflow_v1alpha1_LogEntry

    StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry(;
        error=nothing,
        result=nothing,
    )

    - error::GrpcGatewayRuntimeStreamError
    - result::IoArgoprojWorkflowV1alpha1LogEntry
"""
Base.@kwdef mutable struct StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry <: OpenAPI.APIModel
    error = nothing # spec type: Union{ Nothing, GrpcGatewayRuntimeStreamError }
    result = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1LogEntry }

    function StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry(error, result, )
        OpenAPI.validate_property(StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry, Symbol("error"), error)
        OpenAPI.validate_property(StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry, Symbol("result"), result)
        return new(error, result, )
    end
end # type StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry

const _property_types_StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry = Dict{Symbol,String}(Symbol("error")=>"GrpcGatewayRuntimeStreamError", Symbol("result")=>"IoArgoprojWorkflowV1alpha1LogEntry", )
OpenAPI.property_type(::Type{ StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry[name]))}

function check_required(o::StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry)
    true
end

function OpenAPI.validate_property(::Type{ StreamResultOfIoArgoprojWorkflowV1alpha1LogEntry }, name::Symbol, val)
end
