# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.OSSLifecycleRule
OSSLifecycleRule specifies how to manage bucket&#39;s lifecycle

    IoArgoprojWorkflowV1alpha1OSSLifecycleRule(;
        markDeletionAfterDays=nothing,
        markInfrequentAccessAfterDays=nothing,
    )

    - markDeletionAfterDays::Int64 : MarkDeletionAfterDays is the number of days before we delete objects in the bucket
    - markInfrequentAccessAfterDays::Int64 : MarkInfrequentAccessAfterDays is the number of days before we convert the objects in the bucket to Infrequent Access (IA) storage type
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1OSSLifecycleRule <: OpenAPI.APIModel
    markDeletionAfterDays::Union{Nothing, Int64} = nothing
    markInfrequentAccessAfterDays::Union{Nothing, Int64} = nothing

    function IoArgoprojWorkflowV1alpha1OSSLifecycleRule(markDeletionAfterDays, markInfrequentAccessAfterDays, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSLifecycleRule, Symbol("markDeletionAfterDays"), markDeletionAfterDays)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSLifecycleRule, Symbol("markInfrequentAccessAfterDays"), markInfrequentAccessAfterDays)
        return new(markDeletionAfterDays, markInfrequentAccessAfterDays, )
    end
end # type IoArgoprojWorkflowV1alpha1OSSLifecycleRule

const _property_types_IoArgoprojWorkflowV1alpha1OSSLifecycleRule = Dict{Symbol,String}(Symbol("markDeletionAfterDays")=>"Int64", Symbol("markInfrequentAccessAfterDays")=>"Int64", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1OSSLifecycleRule }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1OSSLifecycleRule[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1OSSLifecycleRule)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1OSSLifecycleRule }, name::Symbol, val)
end
