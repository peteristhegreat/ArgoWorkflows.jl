# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.SeccompProfile
SeccompProfile defines a pod/container&#39;s seccomp profile settings. Only one profile source may be set.

    IoK8sApiCoreV1SeccompProfile(;
        localhostProfile=nothing,
        type=nothing,
    )

    - localhostProfile::String : localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet&#39;s configured seccomp profile location. Must be set if type is \&quot;Localhost\&quot;. Must NOT be set for any other type.
    - type::String : type indicates which kind of seccomp profile will be applied. Valid options are:  Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1SeccompProfile <: OpenAPI.APIModel
    localhostProfile::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1SeccompProfile(localhostProfile, type, )
        OpenAPI.validate_property(IoK8sApiCoreV1SeccompProfile, Symbol("localhostProfile"), localhostProfile)
        OpenAPI.validate_property(IoK8sApiCoreV1SeccompProfile, Symbol("type"), type)
        return new(localhostProfile, type, )
    end
end # type IoK8sApiCoreV1SeccompProfile

const _property_types_IoK8sApiCoreV1SeccompProfile = Dict{Symbol,String}(Symbol("localhostProfile")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1SeccompProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1SeccompProfile[name]))}

function check_required(o::IoK8sApiCoreV1SeccompProfile)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1SeccompProfile }, name::Symbol, val)
end
