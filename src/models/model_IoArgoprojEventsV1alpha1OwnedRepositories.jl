# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.OwnedRepositories

    IoArgoprojEventsV1alpha1OwnedRepositories(;
        names=nothing,
        owner=nothing,
    )

    - names::Vector{String}
    - owner::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1OwnedRepositories <: OpenAPI.APIModel
    names::Union{Nothing, Vector{String}} = nothing
    owner::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1OwnedRepositories(names, owner, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1OwnedRepositories, Symbol("names"), names)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1OwnedRepositories, Symbol("owner"), owner)
        return new(names, owner, )
    end
end # type IoArgoprojEventsV1alpha1OwnedRepositories

const _property_types_IoArgoprojEventsV1alpha1OwnedRepositories = Dict{Symbol,String}(Symbol("names")=>"Vector{String}", Symbol("owner")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1OwnedRepositories }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1OwnedRepositories[name]))}

function check_required(o::IoArgoprojEventsV1alpha1OwnedRepositories)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1OwnedRepositories }, name::Symbol, val)
end
