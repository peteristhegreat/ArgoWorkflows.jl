# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.Resource
Resource represent arbitrary structured data.

    IoArgoprojEventsV1alpha1Resource(;
        value=nothing,
    )

    - value::Vector{UInt8}
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1Resource <: OpenAPI.APIModel
    value::Union{Nothing, Vector{UInt8}} = nothing

    function IoArgoprojEventsV1alpha1Resource(value, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Resource, Symbol("value"), value)
        return new(value, )
    end
end # type IoArgoprojEventsV1alpha1Resource

const _property_types_IoArgoprojEventsV1alpha1Resource = Dict{Symbol,String}(Symbol("value")=>"Vector{UInt8}", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1Resource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1Resource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1Resource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1Resource }, name::Symbol, val)
    if name === Symbol("value")
        OpenAPI.validate_param(name, "IoArgoprojEventsV1alpha1Resource", :format, val, "byte")
    end
    if name === Symbol("value")
        OpenAPI.validate_param(name, "IoArgoprojEventsV1alpha1Resource", :pattern, val, r"^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$")
    end
end
