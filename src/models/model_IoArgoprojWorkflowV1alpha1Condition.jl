# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.Condition

    IoArgoprojWorkflowV1alpha1Condition(;
        message=nothing,
        status=nothing,
        type=nothing,
    )

    - message::String : Message is the condition message
    - status::String : Status is the status of the condition
    - type::String : Type is the type of condition
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1Condition <: OpenAPI.APIModel
    message::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1Condition(message, status, type, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Condition, Symbol("message"), message)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Condition, Symbol("status"), status)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Condition, Symbol("type"), type)
        return new(message, status, type, )
    end
end # type IoArgoprojWorkflowV1alpha1Condition

const _property_types_IoArgoprojWorkflowV1alpha1Condition = Dict{Symbol,String}(Symbol("message")=>"String", Symbol("status")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1Condition }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1Condition[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1Condition)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1Condition }, name::Symbol, val)
end
