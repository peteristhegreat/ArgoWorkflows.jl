# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.StripeEventSource

    IoArgoprojEventsV1alpha1StripeEventSource(;
        apiKey=nothing,
        createWebhook=nothing,
        eventFilter=nothing,
        metadata=nothing,
        webhook=nothing,
    )

    - apiKey::IoK8sApiCoreV1SecretKeySelector
    - createWebhook::Bool
    - eventFilter::Vector{String}
    - metadata::Dict{String, String}
    - webhook::IoArgoprojEventsV1alpha1WebhookContext
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1StripeEventSource <: OpenAPI.APIModel
    apiKey = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    createWebhook::Union{Nothing, Bool} = nothing
    eventFilter::Union{Nothing, Vector{String}} = nothing
    metadata::Union{Nothing, Dict{String, String}} = nothing
    webhook = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1WebhookContext }

    function IoArgoprojEventsV1alpha1StripeEventSource(apiKey, createWebhook, eventFilter, metadata, webhook, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StripeEventSource, Symbol("apiKey"), apiKey)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StripeEventSource, Symbol("createWebhook"), createWebhook)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StripeEventSource, Symbol("eventFilter"), eventFilter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StripeEventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StripeEventSource, Symbol("webhook"), webhook)
        return new(apiKey, createWebhook, eventFilter, metadata, webhook, )
    end
end # type IoArgoprojEventsV1alpha1StripeEventSource

const _property_types_IoArgoprojEventsV1alpha1StripeEventSource = Dict{Symbol,String}(Symbol("apiKey")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("createWebhook")=>"Bool", Symbol("eventFilter")=>"Vector{String}", Symbol("metadata")=>"Dict{String, String}", Symbol("webhook")=>"IoArgoprojEventsV1alpha1WebhookContext", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1StripeEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1StripeEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1StripeEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1StripeEventSource }, name::Symbol, val)
end
