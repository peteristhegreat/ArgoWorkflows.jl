# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.K8SResourcePolicy

    IoArgoprojEventsV1alpha1K8SResourcePolicy(;
        backoff=nothing,
        errorOnBackoffTimeout=nothing,
        labels=nothing,
    )

    - backoff::IoArgoprojEventsV1alpha1Backoff
    - errorOnBackoffTimeout::Bool
    - labels::Dict{String, String}
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1K8SResourcePolicy <: OpenAPI.APIModel
    backoff = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1Backoff }
    errorOnBackoffTimeout::Union{Nothing, Bool} = nothing
    labels::Union{Nothing, Dict{String, String}} = nothing

    function IoArgoprojEventsV1alpha1K8SResourcePolicy(backoff, errorOnBackoffTimeout, labels, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1K8SResourcePolicy, Symbol("backoff"), backoff)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1K8SResourcePolicy, Symbol("errorOnBackoffTimeout"), errorOnBackoffTimeout)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1K8SResourcePolicy, Symbol("labels"), labels)
        return new(backoff, errorOnBackoffTimeout, labels, )
    end
end # type IoArgoprojEventsV1alpha1K8SResourcePolicy

const _property_types_IoArgoprojEventsV1alpha1K8SResourcePolicy = Dict{Symbol,String}(Symbol("backoff")=>"IoArgoprojEventsV1alpha1Backoff", Symbol("errorOnBackoffTimeout")=>"Bool", Symbol("labels")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1K8SResourcePolicy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1K8SResourcePolicy[name]))}

function check_required(o::IoArgoprojEventsV1alpha1K8SResourcePolicy)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1K8SResourcePolicy }, name::Symbol, val)
end
