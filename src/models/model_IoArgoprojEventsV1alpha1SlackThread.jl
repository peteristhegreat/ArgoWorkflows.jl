# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.SlackThread

    IoArgoprojEventsV1alpha1SlackThread(;
        broadcastMessageToChannel=nothing,
        messageAggregationKey=nothing,
    )

    - broadcastMessageToChannel::Bool
    - messageAggregationKey::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1SlackThread <: OpenAPI.APIModel
    broadcastMessageToChannel::Union{Nothing, Bool} = nothing
    messageAggregationKey::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1SlackThread(broadcastMessageToChannel, messageAggregationKey, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackThread, Symbol("broadcastMessageToChannel"), broadcastMessageToChannel)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackThread, Symbol("messageAggregationKey"), messageAggregationKey)
        return new(broadcastMessageToChannel, messageAggregationKey, )
    end
end # type IoArgoprojEventsV1alpha1SlackThread

const _property_types_IoArgoprojEventsV1alpha1SlackThread = Dict{Symbol,String}(Symbol("broadcastMessageToChannel")=>"Bool", Symbol("messageAggregationKey")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1SlackThread }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1SlackThread[name]))}

function check_required(o::IoArgoprojEventsV1alpha1SlackThread)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1SlackThread }, name::Symbol, val)
end
