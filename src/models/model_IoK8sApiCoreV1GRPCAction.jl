# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.GRPCAction

    IoK8sApiCoreV1GRPCAction(;
        port=nothing,
        service=nothing,
    )

    - port::Int64 : Port number of the gRPC service. Number must be in the range 1 to 65535.
    - service::String : Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).  If this is not specified, the default behavior is defined by gRPC.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1GRPCAction <: OpenAPI.APIModel
    port::Union{Nothing, Int64} = nothing
    service::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1GRPCAction(port, service, )
        OpenAPI.validate_property(IoK8sApiCoreV1GRPCAction, Symbol("port"), port)
        OpenAPI.validate_property(IoK8sApiCoreV1GRPCAction, Symbol("service"), service)
        return new(port, service, )
    end
end # type IoK8sApiCoreV1GRPCAction

const _property_types_IoK8sApiCoreV1GRPCAction = Dict{Symbol,String}(Symbol("port")=>"Int64", Symbol("service")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1GRPCAction }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1GRPCAction[name]))}

function check_required(o::IoK8sApiCoreV1GRPCAction)
    o.port === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1GRPCAction }, name::Symbol, val)
end
