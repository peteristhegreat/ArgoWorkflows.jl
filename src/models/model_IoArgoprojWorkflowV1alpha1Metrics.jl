# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.Metrics
Metrics are a list of metrics emitted from a Workflow/Template

    IoArgoprojWorkflowV1alpha1Metrics(;
        prometheus=nothing,
    )

    - prometheus::Vector{IoArgoprojWorkflowV1alpha1Prometheus} : Prometheus is a list of prometheus metrics to be emitted
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1Metrics <: OpenAPI.APIModel
    prometheus::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojWorkflowV1alpha1Prometheus} }

    function IoArgoprojWorkflowV1alpha1Metrics(prometheus, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Metrics, Symbol("prometheus"), prometheus)
        return new(prometheus, )
    end
end # type IoArgoprojWorkflowV1alpha1Metrics

const _property_types_IoArgoprojWorkflowV1alpha1Metrics = Dict{Symbol,String}(Symbol("prometheus")=>"Vector{IoArgoprojWorkflowV1alpha1Prometheus}", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1Metrics }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1Metrics[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1Metrics)
    o.prometheus === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1Metrics }, name::Symbol, val)
end
