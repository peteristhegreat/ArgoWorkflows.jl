# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.StandardK8STrigger

    IoArgoprojEventsV1alpha1StandardK8STrigger(;
        liveObject=nothing,
        operation=nothing,
        parameters=nothing,
        patchStrategy=nothing,
        source=nothing,
    )

    - liveObject::Bool
    - operation::String
    - parameters::Vector{IoArgoprojEventsV1alpha1TriggerParameter} : Parameters is the list of parameters that is applied to resolved K8s trigger object.
    - patchStrategy::String
    - source::IoArgoprojEventsV1alpha1ArtifactLocation
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1StandardK8STrigger <: OpenAPI.APIModel
    liveObject::Union{Nothing, Bool} = nothing
    operation::Union{Nothing, String} = nothing
    parameters::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojEventsV1alpha1TriggerParameter} }
    patchStrategy::Union{Nothing, String} = nothing
    source = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1ArtifactLocation }

    function IoArgoprojEventsV1alpha1StandardK8STrigger(liveObject, operation, parameters, patchStrategy, source, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StandardK8STrigger, Symbol("liveObject"), liveObject)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StandardK8STrigger, Symbol("operation"), operation)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StandardK8STrigger, Symbol("parameters"), parameters)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StandardK8STrigger, Symbol("patchStrategy"), patchStrategy)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1StandardK8STrigger, Symbol("source"), source)
        return new(liveObject, operation, parameters, patchStrategy, source, )
    end
end # type IoArgoprojEventsV1alpha1StandardK8STrigger

const _property_types_IoArgoprojEventsV1alpha1StandardK8STrigger = Dict{Symbol,String}(Symbol("liveObject")=>"Bool", Symbol("operation")=>"String", Symbol("parameters")=>"Vector{IoArgoprojEventsV1alpha1TriggerParameter}", Symbol("patchStrategy")=>"String", Symbol("source")=>"IoArgoprojEventsV1alpha1ArtifactLocation", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1StandardK8STrigger }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1StandardK8STrigger[name]))}

function check_required(o::IoArgoprojEventsV1alpha1StandardK8STrigger)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1StandardK8STrigger }, name::Symbol, val)
end
