# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.WebhookEventSource

    IoArgoprojEventsV1alpha1WebhookEventSource(;
        filter=nothing,
        webhookContext=nothing,
    )

    - filter::IoArgoprojEventsV1alpha1EventSourceFilter
    - webhookContext::IoArgoprojEventsV1alpha1WebhookContext
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1WebhookEventSource <: OpenAPI.APIModel
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceFilter }
    webhookContext = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1WebhookContext }

    function IoArgoprojEventsV1alpha1WebhookEventSource(filter, webhookContext, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1WebhookEventSource, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1WebhookEventSource, Symbol("webhookContext"), webhookContext)
        return new(filter, webhookContext, )
    end
end # type IoArgoprojEventsV1alpha1WebhookEventSource

const _property_types_IoArgoprojEventsV1alpha1WebhookEventSource = Dict{Symbol,String}(Symbol("filter")=>"IoArgoprojEventsV1alpha1EventSourceFilter", Symbol("webhookContext")=>"IoArgoprojEventsV1alpha1WebhookContext", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1WebhookEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1WebhookEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1WebhookEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1WebhookEventSource }, name::Symbol, val)
end
