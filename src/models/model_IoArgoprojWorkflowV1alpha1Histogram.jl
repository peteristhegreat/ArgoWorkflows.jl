# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.Histogram
Histogram is a Histogram prometheus metric

    IoArgoprojWorkflowV1alpha1Histogram(;
        buckets=nothing,
        value=nothing,
    )

    - buckets::Vector{Float64} : Buckets is a list of bucket divisors for the histogram
    - value::String : Value is the value of the metric
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1Histogram <: OpenAPI.APIModel
    buckets::Union{Nothing, Vector{Float64}} = nothing
    value::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1Histogram(buckets, value, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Histogram, Symbol("buckets"), buckets)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Histogram, Symbol("value"), value)
        return new(buckets, value, )
    end
end # type IoArgoprojWorkflowV1alpha1Histogram

const _property_types_IoArgoprojWorkflowV1alpha1Histogram = Dict{Symbol,String}(Symbol("buckets")=>"Vector{Float64}", Symbol("value")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1Histogram }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1Histogram[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1Histogram)
    o.buckets === nothing && (return false)
    o.value === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1Histogram }, name::Symbol, val)
end
