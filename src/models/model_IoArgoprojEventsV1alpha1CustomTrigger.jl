# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.CustomTrigger
CustomTrigger refers to the specification of the custom trigger.

    IoArgoprojEventsV1alpha1CustomTrigger(;
        certSecret=nothing,
        parameters=nothing,
        payload=nothing,
        secure=nothing,
        serverNameOverride=nothing,
        serverURL=nothing,
        spec=nothing,
    )

    - certSecret::IoK8sApiCoreV1SecretKeySelector
    - parameters::Vector{IoArgoprojEventsV1alpha1TriggerParameter} : Parameters is the list of parameters that is applied to resolved custom trigger trigger object.
    - payload::Vector{IoArgoprojEventsV1alpha1TriggerParameter} : Payload is the list of key-value extracted from an event payload to construct the request payload.
    - secure::Bool
    - serverNameOverride::String : ServerNameOverride for the secure connection between sensor and custom trigger gRPC server.
    - serverURL::String
    - spec::Dict{String, String} : Spec is the custom trigger resource specification that custom trigger gRPC server knows how to interpret.
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1CustomTrigger <: OpenAPI.APIModel
    certSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    parameters::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojEventsV1alpha1TriggerParameter} }
    payload::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojEventsV1alpha1TriggerParameter} }
    secure::Union{Nothing, Bool} = nothing
    serverNameOverride::Union{Nothing, String} = nothing
    serverURL::Union{Nothing, String} = nothing
    spec::Union{Nothing, Dict{String, String}} = nothing

    function IoArgoprojEventsV1alpha1CustomTrigger(certSecret, parameters, payload, secure, serverNameOverride, serverURL, spec, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("certSecret"), certSecret)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("parameters"), parameters)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("payload"), payload)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("secure"), secure)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("serverNameOverride"), serverNameOverride)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("serverURL"), serverURL)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1CustomTrigger, Symbol("spec"), spec)
        return new(certSecret, parameters, payload, secure, serverNameOverride, serverURL, spec, )
    end
end # type IoArgoprojEventsV1alpha1CustomTrigger

const _property_types_IoArgoprojEventsV1alpha1CustomTrigger = Dict{Symbol,String}(Symbol("certSecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("parameters")=>"Vector{IoArgoprojEventsV1alpha1TriggerParameter}", Symbol("payload")=>"Vector{IoArgoprojEventsV1alpha1TriggerParameter}", Symbol("secure")=>"Bool", Symbol("serverNameOverride")=>"String", Symbol("serverURL")=>"String", Symbol("spec")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1CustomTrigger }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1CustomTrigger[name]))}

function check_required(o::IoArgoprojEventsV1alpha1CustomTrigger)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1CustomTrigger }, name::Symbol, val)
end
