# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.S3Artifact

    IoArgoprojEventsV1alpha1S3Artifact(;
        accessKey=nothing,
        bucket=nothing,
        caCertificate=nothing,
        endpoint=nothing,
        events=nothing,
        filter=nothing,
        insecure=nothing,
        metadata=nothing,
        region=nothing,
        secretKey=nothing,
    )

    - accessKey::IoK8sApiCoreV1SecretKeySelector
    - bucket::IoArgoprojEventsV1alpha1S3Bucket
    - caCertificate::IoK8sApiCoreV1SecretKeySelector
    - endpoint::String
    - events::Vector{String}
    - filter::IoArgoprojEventsV1alpha1S3Filter
    - insecure::Bool
    - metadata::Dict{String, String}
    - region::String
    - secretKey::IoK8sApiCoreV1SecretKeySelector
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1S3Artifact <: OpenAPI.APIModel
    accessKey = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    bucket = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1S3Bucket }
    caCertificate = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    endpoint::Union{Nothing, String} = nothing
    events::Union{Nothing, Vector{String}} = nothing
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1S3Filter }
    insecure::Union{Nothing, Bool} = nothing
    metadata::Union{Nothing, Dict{String, String}} = nothing
    region::Union{Nothing, String} = nothing
    secretKey = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }

    function IoArgoprojEventsV1alpha1S3Artifact(accessKey, bucket, caCertificate, endpoint, events, filter, insecure, metadata, region, secretKey, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("accessKey"), accessKey)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("bucket"), bucket)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("caCertificate"), caCertificate)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("endpoint"), endpoint)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("events"), events)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("insecure"), insecure)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("region"), region)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1S3Artifact, Symbol("secretKey"), secretKey)
        return new(accessKey, bucket, caCertificate, endpoint, events, filter, insecure, metadata, region, secretKey, )
    end
end # type IoArgoprojEventsV1alpha1S3Artifact

const _property_types_IoArgoprojEventsV1alpha1S3Artifact = Dict{Symbol,String}(Symbol("accessKey")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("bucket")=>"IoArgoprojEventsV1alpha1S3Bucket", Symbol("caCertificate")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("endpoint")=>"String", Symbol("events")=>"Vector{String}", Symbol("filter")=>"IoArgoprojEventsV1alpha1S3Filter", Symbol("insecure")=>"Bool", Symbol("metadata")=>"Dict{String, String}", Symbol("region")=>"String", Symbol("secretKey")=>"IoK8sApiCoreV1SecretKeySelector", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1S3Artifact }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1S3Artifact[name]))}

function check_required(o::IoArgoprojEventsV1alpha1S3Artifact)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1S3Artifact }, name::Symbol, val)
end
