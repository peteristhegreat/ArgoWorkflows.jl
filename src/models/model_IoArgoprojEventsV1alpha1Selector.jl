# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.Selector
Selector represents conditional operation to select K8s objects.

    IoArgoprojEventsV1alpha1Selector(;
        key=nothing,
        operation=nothing,
        value=nothing,
    )

    - key::String
    - operation::String
    - value::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1Selector <: OpenAPI.APIModel
    key::Union{Nothing, String} = nothing
    operation::Union{Nothing, String} = nothing
    value::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1Selector(key, operation, value, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Selector, Symbol("key"), key)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Selector, Symbol("operation"), operation)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Selector, Symbol("value"), value)
        return new(key, operation, value, )
    end
end # type IoArgoprojEventsV1alpha1Selector

const _property_types_IoArgoprojEventsV1alpha1Selector = Dict{Symbol,String}(Symbol("key")=>"String", Symbol("operation")=>"String", Symbol("value")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1Selector }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1Selector[name]))}

function check_required(o::IoArgoprojEventsV1alpha1Selector)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1Selector }, name::Symbol, val)
end
