# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.ResubmitArchivedWorkflowRequest

    IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest(;
        memoized=nothing,
        name=nothing,
        namespace=nothing,
        parameters=nothing,
        uid=nothing,
    )

    - memoized::Bool
    - name::String
    - namespace::String
    - parameters::Vector{String}
    - uid::String
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest <: OpenAPI.APIModel
    memoized::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing
    namespace::Union{Nothing, String} = nothing
    parameters::Union{Nothing, Vector{String}} = nothing
    uid::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest(memoized, name, namespace, parameters, uid, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest, Symbol("memoized"), memoized)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest, Symbol("name"), name)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest, Symbol("namespace"), namespace)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest, Symbol("parameters"), parameters)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest, Symbol("uid"), uid)
        return new(memoized, name, namespace, parameters, uid, )
    end
end # type IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest

const _property_types_IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest = Dict{Symbol,String}(Symbol("memoized")=>"Bool", Symbol("name")=>"String", Symbol("namespace")=>"String", Symbol("parameters")=>"Vector{String}", Symbol("uid")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1ResubmitArchivedWorkflowRequest }, name::Symbol, val)
end
