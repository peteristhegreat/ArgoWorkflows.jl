# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.Service

    IoArgoprojEventsV1alpha1Service(;
        clusterIP=nothing,
        ports=nothing,
    )

    - clusterIP::String
    - ports::Vector{IoK8sApiCoreV1ServicePort}
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1Service <: OpenAPI.APIModel
    clusterIP::Union{Nothing, String} = nothing
    ports::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1ServicePort} }

    function IoArgoprojEventsV1alpha1Service(clusterIP, ports, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Service, Symbol("clusterIP"), clusterIP)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Service, Symbol("ports"), ports)
        return new(clusterIP, ports, )
    end
end # type IoArgoprojEventsV1alpha1Service

const _property_types_IoArgoprojEventsV1alpha1Service = Dict{Symbol,String}(Symbol("clusterIP")=>"String", Symbol("ports")=>"Vector{IoK8sApiCoreV1ServicePort}", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1Service }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1Service[name]))}

function check_required(o::IoArgoprojEventsV1alpha1Service)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1Service }, name::Symbol, val)
end
