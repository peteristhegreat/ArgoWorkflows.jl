# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ModifyVolumeStatus
ModifyVolumeStatus represents the status object of ControllerModifyVolume operation

    IoK8sApiCoreV1ModifyVolumeStatus(;
        status=nothing,
        targetVolumeAttributesClassName=nothing,
    )

    - status::String : status is the status of the ControllerModifyVolume operation. It can be in any of following states:  - Pending    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as    the specified VolumeAttributesClass not existing.  - InProgress    InProgress indicates that the volume is being modified.  - Infeasible   Infeasible indicates that the request has been rejected as invalid by the CSI driver. To    resolve the error, a valid VolumeAttributesClass needs to be specified. Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.
    - targetVolumeAttributesClassName::String : targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ModifyVolumeStatus <: OpenAPI.APIModel
    status::Union{Nothing, String} = nothing
    targetVolumeAttributesClassName::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1ModifyVolumeStatus(status, targetVolumeAttributesClassName, )
        OpenAPI.validate_property(IoK8sApiCoreV1ModifyVolumeStatus, Symbol("status"), status)
        OpenAPI.validate_property(IoK8sApiCoreV1ModifyVolumeStatus, Symbol("targetVolumeAttributesClassName"), targetVolumeAttributesClassName)
        return new(status, targetVolumeAttributesClassName, )
    end
end # type IoK8sApiCoreV1ModifyVolumeStatus

const _property_types_IoK8sApiCoreV1ModifyVolumeStatus = Dict{Symbol,String}(Symbol("status")=>"String", Symbol("targetVolumeAttributesClassName")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ModifyVolumeStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ModifyVolumeStatus[name]))}

function check_required(o::IoK8sApiCoreV1ModifyVolumeStatus)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ModifyVolumeStatus }, name::Symbol, val)
end
