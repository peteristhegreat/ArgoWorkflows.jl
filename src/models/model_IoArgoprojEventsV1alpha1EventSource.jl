# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.EventSource

    IoArgoprojEventsV1alpha1EventSource(;
        metadata=nothing,
        spec=nothing,
        status=nothing,
    )

    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta
    - spec::IoArgoprojEventsV1alpha1EventSourceSpec
    - status::IoArgoprojEventsV1alpha1EventSourceStatus
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1EventSource <: OpenAPI.APIModel
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta }
    spec = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceSpec }
    status = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceStatus }

    function IoArgoprojEventsV1alpha1EventSource(metadata, spec, status, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventSource, Symbol("spec"), spec)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventSource, Symbol("status"), status)
        return new(metadata, spec, status, )
    end
end # type IoArgoprojEventsV1alpha1EventSource

const _property_types_IoArgoprojEventsV1alpha1EventSource = Dict{Symbol,String}(Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("spec")=>"IoArgoprojEventsV1alpha1EventSourceSpec", Symbol("status")=>"IoArgoprojEventsV1alpha1EventSourceStatus", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1EventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1EventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1EventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1EventSource }, name::Symbol, val)
end
