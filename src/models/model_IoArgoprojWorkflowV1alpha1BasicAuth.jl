# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.BasicAuth
BasicAuth describes the secret selectors required for basic authentication

    IoArgoprojWorkflowV1alpha1BasicAuth(;
        passwordSecret=nothing,
        usernameSecret=nothing,
    )

    - passwordSecret::IoK8sApiCoreV1SecretKeySelector
    - usernameSecret::IoK8sApiCoreV1SecretKeySelector
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1BasicAuth <: OpenAPI.APIModel
    passwordSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    usernameSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }

    function IoArgoprojWorkflowV1alpha1BasicAuth(passwordSecret, usernameSecret, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1BasicAuth, Symbol("passwordSecret"), passwordSecret)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1BasicAuth, Symbol("usernameSecret"), usernameSecret)
        return new(passwordSecret, usernameSecret, )
    end
end # type IoArgoprojWorkflowV1alpha1BasicAuth

const _property_types_IoArgoprojWorkflowV1alpha1BasicAuth = Dict{Symbol,String}(Symbol("passwordSecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("usernameSecret")=>"IoK8sApiCoreV1SecretKeySelector", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1BasicAuth }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1BasicAuth[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1BasicAuth)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1BasicAuth }, name::Symbol, val)
end
