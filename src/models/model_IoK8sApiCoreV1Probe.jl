# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.Probe
Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.

    IoK8sApiCoreV1Probe(;
        exec=nothing,
        failureThreshold=nothing,
        grpc=nothing,
        httpGet=nothing,
        initialDelaySeconds=nothing,
        periodSeconds=nothing,
        successThreshold=nothing,
        tcpSocket=nothing,
        terminationGracePeriodSeconds=nothing,
        timeoutSeconds=nothing,
    )

    - exec::IoK8sApiCoreV1ExecAction
    - failureThreshold::Int64 : Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    - grpc::IoK8sApiCoreV1GRPCAction
    - httpGet::IoK8sApiCoreV1HTTPGetAction
    - initialDelaySeconds::Int64 : Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    - periodSeconds::Int64 : How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    - successThreshold::Int64 : Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    - tcpSocket::IoK8sApiCoreV1TCPSocketAction
    - terminationGracePeriodSeconds::Int64 : Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod&#39;s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    - timeoutSeconds::Int64 : Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
"""
Base.@kwdef mutable struct IoK8sApiCoreV1Probe <: OpenAPI.APIModel
    exec = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ExecAction }
    failureThreshold::Union{Nothing, Int64} = nothing
    grpc = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1GRPCAction }
    httpGet = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1HTTPGetAction }
    initialDelaySeconds::Union{Nothing, Int64} = nothing
    periodSeconds::Union{Nothing, Int64} = nothing
    successThreshold::Union{Nothing, Int64} = nothing
    tcpSocket = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1TCPSocketAction }
    terminationGracePeriodSeconds::Union{Nothing, Int64} = nothing
    timeoutSeconds::Union{Nothing, Int64} = nothing

    function IoK8sApiCoreV1Probe(exec, failureThreshold, grpc, httpGet, initialDelaySeconds, periodSeconds, successThreshold, tcpSocket, terminationGracePeriodSeconds, timeoutSeconds, )
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("exec"), exec)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("failureThreshold"), failureThreshold)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("grpc"), grpc)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("httpGet"), httpGet)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("initialDelaySeconds"), initialDelaySeconds)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("periodSeconds"), periodSeconds)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("successThreshold"), successThreshold)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("tcpSocket"), tcpSocket)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("terminationGracePeriodSeconds"), terminationGracePeriodSeconds)
        OpenAPI.validate_property(IoK8sApiCoreV1Probe, Symbol("timeoutSeconds"), timeoutSeconds)
        return new(exec, failureThreshold, grpc, httpGet, initialDelaySeconds, periodSeconds, successThreshold, tcpSocket, terminationGracePeriodSeconds, timeoutSeconds, )
    end
end # type IoK8sApiCoreV1Probe

const _property_types_IoK8sApiCoreV1Probe = Dict{Symbol,String}(Symbol("exec")=>"IoK8sApiCoreV1ExecAction", Symbol("failureThreshold")=>"Int64", Symbol("grpc")=>"IoK8sApiCoreV1GRPCAction", Symbol("httpGet")=>"IoK8sApiCoreV1HTTPGetAction", Symbol("initialDelaySeconds")=>"Int64", Symbol("periodSeconds")=>"Int64", Symbol("successThreshold")=>"Int64", Symbol("tcpSocket")=>"IoK8sApiCoreV1TCPSocketAction", Symbol("terminationGracePeriodSeconds")=>"Int64", Symbol("timeoutSeconds")=>"Int64", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1Probe }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1Probe[name]))}

function check_required(o::IoK8sApiCoreV1Probe)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1Probe }, name::Symbol, val)
end
