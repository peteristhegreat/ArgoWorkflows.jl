# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.ResourceFilter

    IoArgoprojEventsV1alpha1ResourceFilter(;
        afterStart=nothing,
        createdBy=nothing,
        fields=nothing,
        labels=nothing,
        prefix=nothing,
    )

    - afterStart::Bool
    - createdBy::ZonedDateTime : Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    - fields::Vector{IoArgoprojEventsV1alpha1Selector}
    - labels::Vector{IoArgoprojEventsV1alpha1Selector}
    - prefix::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1ResourceFilter <: OpenAPI.APIModel
    afterStart::Union{Nothing, Bool} = nothing
    createdBy::Union{Nothing, ZonedDateTime} = nothing
    fields::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojEventsV1alpha1Selector} }
    labels::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojEventsV1alpha1Selector} }
    prefix::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1ResourceFilter(afterStart, createdBy, fields, labels, prefix, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ResourceFilter, Symbol("afterStart"), afterStart)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ResourceFilter, Symbol("createdBy"), createdBy)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ResourceFilter, Symbol("fields"), fields)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ResourceFilter, Symbol("labels"), labels)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ResourceFilter, Symbol("prefix"), prefix)
        return new(afterStart, createdBy, fields, labels, prefix, )
    end
end # type IoArgoprojEventsV1alpha1ResourceFilter

const _property_types_IoArgoprojEventsV1alpha1ResourceFilter = Dict{Symbol,String}(Symbol("afterStart")=>"Bool", Symbol("createdBy")=>"ZonedDateTime", Symbol("fields")=>"Vector{IoArgoprojEventsV1alpha1Selector}", Symbol("labels")=>"Vector{IoArgoprojEventsV1alpha1Selector}", Symbol("prefix")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1ResourceFilter }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1ResourceFilter[name]))}

function check_required(o::IoArgoprojEventsV1alpha1ResourceFilter)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1ResourceFilter }, name::Symbol, val)
    if name === Symbol("createdBy")
        OpenAPI.validate_param(name, "IoArgoprojEventsV1alpha1ResourceFilter", :format, val, "date-time")
    end
end
