# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.Template

    IoArgoprojEventsV1alpha1Template(;
        affinity=nothing,
        container=nothing,
        imagePullSecrets=nothing,
        metadata=nothing,
        nodeSelector=nothing,
        priority=nothing,
        priorityClassName=nothing,
        securityContext=nothing,
        serviceAccountName=nothing,
        tolerations=nothing,
        volumes=nothing,
    )

    - affinity::IoK8sApiCoreV1Affinity
    - container::IoK8sApiCoreV1Container
    - imagePullSecrets::Vector{IoK8sApiCoreV1LocalObjectReference}
    - metadata::IoArgoprojEventsV1alpha1Metadata
    - nodeSelector::Dict{String, String}
    - priority::Int64
    - priorityClassName::String
    - securityContext::IoK8sApiCoreV1PodSecurityContext
    - serviceAccountName::String
    - tolerations::Vector{IoK8sApiCoreV1Toleration}
    - volumes::Vector{IoK8sApiCoreV1Volume}
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1Template <: OpenAPI.APIModel
    affinity = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1Affinity }
    container = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1Container }
    imagePullSecrets::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1LocalObjectReference} }
    metadata = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1Metadata }
    nodeSelector::Union{Nothing, Dict{String, String}} = nothing
    priority::Union{Nothing, Int64} = nothing
    priorityClassName::Union{Nothing, String} = nothing
    securityContext = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1PodSecurityContext }
    serviceAccountName::Union{Nothing, String} = nothing
    tolerations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1Toleration} }
    volumes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1Volume} }

    function IoArgoprojEventsV1alpha1Template(affinity, container, imagePullSecrets, metadata, nodeSelector, priority, priorityClassName, securityContext, serviceAccountName, tolerations, volumes, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("affinity"), affinity)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("container"), container)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("imagePullSecrets"), imagePullSecrets)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("nodeSelector"), nodeSelector)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("priority"), priority)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("priorityClassName"), priorityClassName)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("securityContext"), securityContext)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("serviceAccountName"), serviceAccountName)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("tolerations"), tolerations)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1Template, Symbol("volumes"), volumes)
        return new(affinity, container, imagePullSecrets, metadata, nodeSelector, priority, priorityClassName, securityContext, serviceAccountName, tolerations, volumes, )
    end
end # type IoArgoprojEventsV1alpha1Template

const _property_types_IoArgoprojEventsV1alpha1Template = Dict{Symbol,String}(Symbol("affinity")=>"IoK8sApiCoreV1Affinity", Symbol("container")=>"IoK8sApiCoreV1Container", Symbol("imagePullSecrets")=>"Vector{IoK8sApiCoreV1LocalObjectReference}", Symbol("metadata")=>"IoArgoprojEventsV1alpha1Metadata", Symbol("nodeSelector")=>"Dict{String, String}", Symbol("priority")=>"Int64", Symbol("priorityClassName")=>"String", Symbol("securityContext")=>"IoK8sApiCoreV1PodSecurityContext", Symbol("serviceAccountName")=>"String", Symbol("tolerations")=>"Vector{IoK8sApiCoreV1Toleration}", Symbol("volumes")=>"Vector{IoK8sApiCoreV1Volume}", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1Template }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1Template[name]))}

function check_required(o::IoArgoprojEventsV1alpha1Template)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1Template }, name::Symbol, val)
end
