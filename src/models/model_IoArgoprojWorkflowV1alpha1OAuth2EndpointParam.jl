# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.OAuth2EndpointParam
EndpointParam is for requesting optional fields that should be sent in the oauth request

    IoArgoprojWorkflowV1alpha1OAuth2EndpointParam(;
        key=nothing,
        value=nothing,
    )

    - key::String : Name is the header name
    - value::String : Value is the literal value to use for the header
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1OAuth2EndpointParam <: OpenAPI.APIModel
    key::Union{Nothing, String} = nothing
    value::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1OAuth2EndpointParam(key, value, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2EndpointParam, Symbol("key"), key)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2EndpointParam, Symbol("value"), value)
        return new(key, value, )
    end
end # type IoArgoprojWorkflowV1alpha1OAuth2EndpointParam

const _property_types_IoArgoprojWorkflowV1alpha1OAuth2EndpointParam = Dict{Symbol,String}(Symbol("key")=>"String", Symbol("value")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1OAuth2EndpointParam }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1OAuth2EndpointParam[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1OAuth2EndpointParam)
    o.key === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1OAuth2EndpointParam }, name::Symbol, val)
end
