# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.ContainerSetRetryStrategy
ContainerSetRetryStrategy provides controls on how to retry a container set

    IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy(;
        duration=nothing,
        retries=nothing,
    )

    - duration::String : Duration is the time between each retry, examples values are \&quot;300ms\&quot;, \&quot;1s\&quot; or \&quot;5m\&quot;. Valid time units are \&quot;ns\&quot;, \&quot;us\&quot; (or \&quot;Âµs\&quot;), \&quot;ms\&quot;, \&quot;s\&quot;, \&quot;m\&quot;, \&quot;h\&quot;.
    - retries::String
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy <: OpenAPI.APIModel
    duration::Union{Nothing, String} = nothing
    retries::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy(duration, retries, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy, Symbol("duration"), duration)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy, Symbol("retries"), retries)
        return new(duration, retries, )
    end
end # type IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy

const _property_types_IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy = Dict{Symbol,String}(Symbol("duration")=>"String", Symbol("retries")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy)
    o.retries === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy }, name::Symbol, val)
end
