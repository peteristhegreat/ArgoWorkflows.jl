# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.GerritEventSource

    IoArgoprojEventsV1alpha1GerritEventSource(;
        auth=nothing,
        deleteHookOnFinish=nothing,
        events=nothing,
        filter=nothing,
        gerritBaseURL=nothing,
        hookName=nothing,
        metadata=nothing,
        projects=nothing,
        sslVerify=nothing,
        webhook=nothing,
    )

    - auth::IoArgoprojEventsV1alpha1BasicAuth
    - deleteHookOnFinish::Bool
    - events::Vector{String}
    - filter::IoArgoprojEventsV1alpha1EventSourceFilter
    - gerritBaseURL::String
    - hookName::String
    - metadata::Dict{String, String}
    - projects::Vector{String} : List of project namespace paths like \&quot;whynowy/test\&quot;.
    - sslVerify::Bool
    - webhook::IoArgoprojEventsV1alpha1WebhookContext
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1GerritEventSource <: OpenAPI.APIModel
    auth = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1BasicAuth }
    deleteHookOnFinish::Union{Nothing, Bool} = nothing
    events::Union{Nothing, Vector{String}} = nothing
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceFilter }
    gerritBaseURL::Union{Nothing, String} = nothing
    hookName::Union{Nothing, String} = nothing
    metadata::Union{Nothing, Dict{String, String}} = nothing
    projects::Union{Nothing, Vector{String}} = nothing
    sslVerify::Union{Nothing, Bool} = nothing
    webhook = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1WebhookContext }

    function IoArgoprojEventsV1alpha1GerritEventSource(auth, deleteHookOnFinish, events, filter, gerritBaseURL, hookName, metadata, projects, sslVerify, webhook, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("auth"), auth)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("deleteHookOnFinish"), deleteHookOnFinish)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("events"), events)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("gerritBaseURL"), gerritBaseURL)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("hookName"), hookName)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("projects"), projects)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("sslVerify"), sslVerify)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1GerritEventSource, Symbol("webhook"), webhook)
        return new(auth, deleteHookOnFinish, events, filter, gerritBaseURL, hookName, metadata, projects, sslVerify, webhook, )
    end
end # type IoArgoprojEventsV1alpha1GerritEventSource

const _property_types_IoArgoprojEventsV1alpha1GerritEventSource = Dict{Symbol,String}(Symbol("auth")=>"IoArgoprojEventsV1alpha1BasicAuth", Symbol("deleteHookOnFinish")=>"Bool", Symbol("events")=>"Vector{String}", Symbol("filter")=>"IoArgoprojEventsV1alpha1EventSourceFilter", Symbol("gerritBaseURL")=>"String", Symbol("hookName")=>"String", Symbol("metadata")=>"Dict{String, String}", Symbol("projects")=>"Vector{String}", Symbol("sslVerify")=>"Bool", Symbol("webhook")=>"IoArgoprojEventsV1alpha1WebhookContext", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1GerritEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1GerritEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1GerritEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1GerritEventSource }, name::Symbol, val)
end
