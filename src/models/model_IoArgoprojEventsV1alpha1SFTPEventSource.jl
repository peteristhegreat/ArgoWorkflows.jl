# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.SFTPEventSource
SFTPEventSource describes an event-source for sftp related events.

    IoArgoprojEventsV1alpha1SFTPEventSource(;
        address=nothing,
        eventType=nothing,
        filter=nothing,
        metadata=nothing,
        password=nothing,
        pollIntervalDuration=nothing,
        sshKeySecret=nothing,
        username=nothing,
        watchPathConfig=nothing,
    )

    - address::IoK8sApiCoreV1SecretKeySelector
    - eventType::String
    - filter::IoArgoprojEventsV1alpha1EventSourceFilter
    - metadata::Dict{String, String}
    - password::IoK8sApiCoreV1SecretKeySelector
    - pollIntervalDuration::String
    - sshKeySecret::IoK8sApiCoreV1SecretKeySelector
    - username::IoK8sApiCoreV1SecretKeySelector
    - watchPathConfig::IoArgoprojEventsV1alpha1WatchPathConfig
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1SFTPEventSource <: OpenAPI.APIModel
    address = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    eventType::Union{Nothing, String} = nothing
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceFilter }
    metadata::Union{Nothing, Dict{String, String}} = nothing
    password = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    pollIntervalDuration::Union{Nothing, String} = nothing
    sshKeySecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    username = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    watchPathConfig = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1WatchPathConfig }

    function IoArgoprojEventsV1alpha1SFTPEventSource(address, eventType, filter, metadata, password, pollIntervalDuration, sshKeySecret, username, watchPathConfig, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("address"), address)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("eventType"), eventType)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("password"), password)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("pollIntervalDuration"), pollIntervalDuration)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("sshKeySecret"), sshKeySecret)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("username"), username)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SFTPEventSource, Symbol("watchPathConfig"), watchPathConfig)
        return new(address, eventType, filter, metadata, password, pollIntervalDuration, sshKeySecret, username, watchPathConfig, )
    end
end # type IoArgoprojEventsV1alpha1SFTPEventSource

const _property_types_IoArgoprojEventsV1alpha1SFTPEventSource = Dict{Symbol,String}(Symbol("address")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("eventType")=>"String", Symbol("filter")=>"IoArgoprojEventsV1alpha1EventSourceFilter", Symbol("metadata")=>"Dict{String, String}", Symbol("password")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("pollIntervalDuration")=>"String", Symbol("sshKeySecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("username")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("watchPathConfig")=>"IoArgoprojEventsV1alpha1WatchPathConfig", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1SFTPEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1SFTPEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1SFTPEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1SFTPEventSource }, name::Symbol, val)
end
