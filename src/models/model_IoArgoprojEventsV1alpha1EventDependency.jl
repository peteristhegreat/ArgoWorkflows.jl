# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.EventDependency

    IoArgoprojEventsV1alpha1EventDependency(;
        eventName=nothing,
        eventSourceName=nothing,
        filters=nothing,
        filtersLogicalOperator=nothing,
        name=nothing,
        transform=nothing,
    )

    - eventName::String
    - eventSourceName::String
    - filters::IoArgoprojEventsV1alpha1EventDependencyFilter
    - filtersLogicalOperator::String : FiltersLogicalOperator defines how different filters are evaluated together. Available values: and (&amp;&amp;), or (||) Is optional and if left blank treated as and (&amp;&amp;).
    - name::String
    - transform::IoArgoprojEventsV1alpha1EventDependencyTransformer
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1EventDependency <: OpenAPI.APIModel
    eventName::Union{Nothing, String} = nothing
    eventSourceName::Union{Nothing, String} = nothing
    filters = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventDependencyFilter }
    filtersLogicalOperator::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    transform = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventDependencyTransformer }

    function IoArgoprojEventsV1alpha1EventDependency(eventName, eventSourceName, filters, filtersLogicalOperator, name, transform, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventDependency, Symbol("eventName"), eventName)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventDependency, Symbol("eventSourceName"), eventSourceName)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventDependency, Symbol("filters"), filters)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventDependency, Symbol("filtersLogicalOperator"), filtersLogicalOperator)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventDependency, Symbol("name"), name)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1EventDependency, Symbol("transform"), transform)
        return new(eventName, eventSourceName, filters, filtersLogicalOperator, name, transform, )
    end
end # type IoArgoprojEventsV1alpha1EventDependency

const _property_types_IoArgoprojEventsV1alpha1EventDependency = Dict{Symbol,String}(Symbol("eventName")=>"String", Symbol("eventSourceName")=>"String", Symbol("filters")=>"IoArgoprojEventsV1alpha1EventDependencyFilter", Symbol("filtersLogicalOperator")=>"String", Symbol("name")=>"String", Symbol("transform")=>"IoArgoprojEventsV1alpha1EventDependencyTransformer", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1EventDependency }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1EventDependency[name]))}

function check_required(o::IoArgoprojEventsV1alpha1EventDependency)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1EventDependency }, name::Symbol, val)
end
