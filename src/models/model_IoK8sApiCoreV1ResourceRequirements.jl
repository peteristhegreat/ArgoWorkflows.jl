# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.ResourceRequirements
ResourceRequirements describes the compute resource requirements.

    IoK8sApiCoreV1ResourceRequirements(;
        claims=nothing,
        limits=nothing,
        requests=nothing,
    )

    - claims::Vector{IoK8sApiCoreV1ResourceClaim} : Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.  This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.  This field is immutable. It can only be set for containers.
    - limits::Dict{String, String} : Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    - requests::Dict{String, String} : Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
"""
Base.@kwdef mutable struct IoK8sApiCoreV1ResourceRequirements <: OpenAPI.APIModel
    claims::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1ResourceClaim} }
    limits::Union{Nothing, Dict{String, String}} = nothing
    requests::Union{Nothing, Dict{String, String}} = nothing

    function IoK8sApiCoreV1ResourceRequirements(claims, limits, requests, )
        OpenAPI.validate_property(IoK8sApiCoreV1ResourceRequirements, Symbol("claims"), claims)
        OpenAPI.validate_property(IoK8sApiCoreV1ResourceRequirements, Symbol("limits"), limits)
        OpenAPI.validate_property(IoK8sApiCoreV1ResourceRequirements, Symbol("requests"), requests)
        return new(claims, limits, requests, )
    end
end # type IoK8sApiCoreV1ResourceRequirements

const _property_types_IoK8sApiCoreV1ResourceRequirements = Dict{Symbol,String}(Symbol("claims")=>"Vector{IoK8sApiCoreV1ResourceClaim}", Symbol("limits")=>"Dict{String, String}", Symbol("requests")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1ResourceRequirements }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1ResourceRequirements[name]))}

function check_required(o::IoK8sApiCoreV1ResourceRequirements)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1ResourceRequirements }, name::Symbol, val)
end
