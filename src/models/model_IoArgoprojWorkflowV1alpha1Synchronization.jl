# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.Synchronization
Synchronization holds synchronization lock configuration

    IoArgoprojWorkflowV1alpha1Synchronization(;
        mutex=nothing,
        mutexes=nothing,
        semaphore=nothing,
        semaphores=nothing,
    )

    - mutex::IoArgoprojWorkflowV1alpha1Mutex
    - mutexes::Vector{IoArgoprojWorkflowV1alpha1Mutex} : v3.6 and after: Mutexes holds the list of Mutex lock details
    - semaphore::IoArgoprojWorkflowV1alpha1SemaphoreRef
    - semaphores::Vector{IoArgoprojWorkflowV1alpha1SemaphoreRef} : v3.6 and after: Semaphores holds the list of Semaphores configuration
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1Synchronization <: OpenAPI.APIModel
    mutex = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1Mutex }
    mutexes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojWorkflowV1alpha1Mutex} }
    semaphore = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1SemaphoreRef }
    semaphores::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojWorkflowV1alpha1SemaphoreRef} }

    function IoArgoprojWorkflowV1alpha1Synchronization(mutex, mutexes, semaphore, semaphores, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Synchronization, Symbol("mutex"), mutex)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Synchronization, Symbol("mutexes"), mutexes)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Synchronization, Symbol("semaphore"), semaphore)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Synchronization, Symbol("semaphores"), semaphores)
        return new(mutex, mutexes, semaphore, semaphores, )
    end
end # type IoArgoprojWorkflowV1alpha1Synchronization

const _property_types_IoArgoprojWorkflowV1alpha1Synchronization = Dict{Symbol,String}(Symbol("mutex")=>"IoArgoprojWorkflowV1alpha1Mutex", Symbol("mutexes")=>"Vector{IoArgoprojWorkflowV1alpha1Mutex}", Symbol("semaphore")=>"IoArgoprojWorkflowV1alpha1SemaphoreRef", Symbol("semaphores")=>"Vector{IoArgoprojWorkflowV1alpha1SemaphoreRef}", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1Synchronization }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1Synchronization[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1Synchronization)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1Synchronization }, name::Symbol, val)
end
