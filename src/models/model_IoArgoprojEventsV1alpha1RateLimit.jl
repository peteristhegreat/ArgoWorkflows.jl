# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.RateLimit

    IoArgoprojEventsV1alpha1RateLimit(;
        requestsPerUnit=nothing,
        unit=nothing,
    )

    - requestsPerUnit::Int64
    - unit::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1RateLimit <: OpenAPI.APIModel
    requestsPerUnit::Union{Nothing, Int64} = nothing
    unit::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1RateLimit(requestsPerUnit, unit, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1RateLimit, Symbol("requestsPerUnit"), requestsPerUnit)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1RateLimit, Symbol("unit"), unit)
        return new(requestsPerUnit, unit, )
    end
end # type IoArgoprojEventsV1alpha1RateLimit

const _property_types_IoArgoprojEventsV1alpha1RateLimit = Dict{Symbol,String}(Symbol("requestsPerUnit")=>"Int64", Symbol("unit")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1RateLimit }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1RateLimit[name]))}

function check_required(o::IoArgoprojEventsV1alpha1RateLimit)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1RateLimit }, name::Symbol, val)
end
