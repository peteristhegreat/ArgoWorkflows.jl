# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.TransformationStep

    IoArgoprojWorkflowV1alpha1TransformationStep(;
        expression=nothing,
    )

    - expression::String : Expression defines an expr expression to apply
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1TransformationStep <: OpenAPI.APIModel
    expression::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1TransformationStep(expression, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1TransformationStep, Symbol("expression"), expression)
        return new(expression, )
    end
end # type IoArgoprojWorkflowV1alpha1TransformationStep

const _property_types_IoArgoprojWorkflowV1alpha1TransformationStep = Dict{Symbol,String}(Symbol("expression")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1TransformationStep }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1TransformationStep[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1TransformationStep)
    o.expression === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1TransformationStep }, name::Symbol, val)
end
