# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.SensorList

    IoArgoprojEventsV1alpha1SensorList(;
        items=nothing,
        metadata=nothing,
    )

    - items::Vector{IoArgoprojEventsV1alpha1Sensor}
    - metadata::IoK8sApimachineryPkgApisMetaV1ListMeta
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1SensorList <: OpenAPI.APIModel
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojEventsV1alpha1Sensor} }
    metadata = nothing # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ListMeta }

    function IoArgoprojEventsV1alpha1SensorList(items, metadata, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SensorList, Symbol("items"), items)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SensorList, Symbol("metadata"), metadata)
        return new(items, metadata, )
    end
end # type IoArgoprojEventsV1alpha1SensorList

const _property_types_IoArgoprojEventsV1alpha1SensorList = Dict{Symbol,String}(Symbol("items")=>"Vector{IoArgoprojEventsV1alpha1Sensor}", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ListMeta", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1SensorList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1SensorList[name]))}

function check_required(o::IoArgoprojEventsV1alpha1SensorList)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1SensorList }, name::Symbol, val)
end
