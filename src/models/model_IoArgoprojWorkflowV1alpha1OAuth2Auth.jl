# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.OAuth2Auth
OAuth2Auth holds all information for client authentication via OAuth2 tokens

    IoArgoprojWorkflowV1alpha1OAuth2Auth(;
        clientIDSecret=nothing,
        clientSecretSecret=nothing,
        endpointParams=nothing,
        scopes=nothing,
        tokenURLSecret=nothing,
    )

    - clientIDSecret::IoK8sApiCoreV1SecretKeySelector
    - clientSecretSecret::IoK8sApiCoreV1SecretKeySelector
    - endpointParams::Vector{IoArgoprojWorkflowV1alpha1OAuth2EndpointParam}
    - scopes::Vector{String}
    - tokenURLSecret::IoK8sApiCoreV1SecretKeySelector
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1OAuth2Auth <: OpenAPI.APIModel
    clientIDSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    clientSecretSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    endpointParams::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IoArgoprojWorkflowV1alpha1OAuth2EndpointParam} }
    scopes::Union{Nothing, Vector{String}} = nothing
    tokenURLSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }

    function IoArgoprojWorkflowV1alpha1OAuth2Auth(clientIDSecret, clientSecretSecret, endpointParams, scopes, tokenURLSecret, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2Auth, Symbol("clientIDSecret"), clientIDSecret)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2Auth, Symbol("clientSecretSecret"), clientSecretSecret)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2Auth, Symbol("endpointParams"), endpointParams)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2Auth, Symbol("scopes"), scopes)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OAuth2Auth, Symbol("tokenURLSecret"), tokenURLSecret)
        return new(clientIDSecret, clientSecretSecret, endpointParams, scopes, tokenURLSecret, )
    end
end # type IoArgoprojWorkflowV1alpha1OAuth2Auth

const _property_types_IoArgoprojWorkflowV1alpha1OAuth2Auth = Dict{Symbol,String}(Symbol("clientIDSecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("clientSecretSecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("endpointParams")=>"Vector{IoArgoprojWorkflowV1alpha1OAuth2EndpointParam}", Symbol("scopes")=>"Vector{String}", Symbol("tokenURLSecret")=>"IoK8sApiCoreV1SecretKeySelector", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1OAuth2Auth }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1OAuth2Auth[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1OAuth2Auth)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1OAuth2Auth }, name::Symbol, val)
end
