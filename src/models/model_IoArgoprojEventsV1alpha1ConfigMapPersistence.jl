# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.ConfigMapPersistence

    IoArgoprojEventsV1alpha1ConfigMapPersistence(;
        createIfNotExist=nothing,
        name=nothing,
    )

    - createIfNotExist::Bool
    - name::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1ConfigMapPersistence <: OpenAPI.APIModel
    createIfNotExist::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1ConfigMapPersistence(createIfNotExist, name, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ConfigMapPersistence, Symbol("createIfNotExist"), createIfNotExist)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ConfigMapPersistence, Symbol("name"), name)
        return new(createIfNotExist, name, )
    end
end # type IoArgoprojEventsV1alpha1ConfigMapPersistence

const _property_types_IoArgoprojEventsV1alpha1ConfigMapPersistence = Dict{Symbol,String}(Symbol("createIfNotExist")=>"Bool", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1ConfigMapPersistence }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1ConfigMapPersistence[name]))}

function check_required(o::IoArgoprojEventsV1alpha1ConfigMapPersistence)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1ConfigMapPersistence }, name::Symbol, val)
end
