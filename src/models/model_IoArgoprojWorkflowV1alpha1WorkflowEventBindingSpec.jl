# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.WorkflowEventBindingSpec

    IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec(;
        event=nothing,
        submit=nothing,
    )

    - event::IoArgoprojWorkflowV1alpha1Event
    - submit::IoArgoprojWorkflowV1alpha1Submit
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec <: OpenAPI.APIModel
    event = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1Event }
    submit = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1Submit }

    function IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec(event, submit, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec, Symbol("event"), event)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec, Symbol("submit"), submit)
        return new(event, submit, )
    end
end # type IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec

const _property_types_IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec = Dict{Symbol,String}(Symbol("event")=>"IoArgoprojWorkflowV1alpha1Event", Symbol("submit")=>"IoArgoprojWorkflowV1alpha1Submit", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec)
    o.event === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1WorkflowEventBindingSpec }, name::Symbol, val)
end
