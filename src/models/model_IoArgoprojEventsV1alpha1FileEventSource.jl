# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.FileEventSource
FileEventSource describes an event-source for file related events.

    IoArgoprojEventsV1alpha1FileEventSource(;
        eventType=nothing,
        filter=nothing,
        metadata=nothing,
        polling=nothing,
        watchPathConfig=nothing,
    )

    - eventType::String
    - filter::IoArgoprojEventsV1alpha1EventSourceFilter
    - metadata::Dict{String, String}
    - polling::Bool
    - watchPathConfig::IoArgoprojEventsV1alpha1WatchPathConfig
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1FileEventSource <: OpenAPI.APIModel
    eventType::Union{Nothing, String} = nothing
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceFilter }
    metadata::Union{Nothing, Dict{String, String}} = nothing
    polling::Union{Nothing, Bool} = nothing
    watchPathConfig = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1WatchPathConfig }

    function IoArgoprojEventsV1alpha1FileEventSource(eventType, filter, metadata, polling, watchPathConfig, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1FileEventSource, Symbol("eventType"), eventType)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1FileEventSource, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1FileEventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1FileEventSource, Symbol("polling"), polling)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1FileEventSource, Symbol("watchPathConfig"), watchPathConfig)
        return new(eventType, filter, metadata, polling, watchPathConfig, )
    end
end # type IoArgoprojEventsV1alpha1FileEventSource

const _property_types_IoArgoprojEventsV1alpha1FileEventSource = Dict{Symbol,String}(Symbol("eventType")=>"String", Symbol("filter")=>"IoArgoprojEventsV1alpha1EventSourceFilter", Symbol("metadata")=>"Dict{String, String}", Symbol("polling")=>"Bool", Symbol("watchPathConfig")=>"IoArgoprojEventsV1alpha1WatchPathConfig", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1FileEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1FileEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1FileEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1FileEventSource }, name::Symbol, val)
end
