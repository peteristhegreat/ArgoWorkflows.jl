# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.OSSArtifactRepository
OSSArtifactRepository defines the controller configuration for an OSS artifact repository

    IoArgoprojWorkflowV1alpha1OSSArtifactRepository(;
        accessKeySecret=nothing,
        bucket=nothing,
        createBucketIfNotPresent=nothing,
        endpoint=nothing,
        keyFormat=nothing,
        lifecycleRule=nothing,
        secretKeySecret=nothing,
        securityToken=nothing,
        useSDKCreds=nothing,
    )

    - accessKeySecret::IoK8sApiCoreV1SecretKeySelector
    - bucket::String : Bucket is the name of the bucket
    - createBucketIfNotPresent::Bool : CreateBucketIfNotPresent tells the driver to attempt to create the OSS bucket for output artifacts, if it doesn&#39;t exist
    - endpoint::String : Endpoint is the hostname of the bucket endpoint
    - keyFormat::String : KeyFormat defines the format of how to store keys and can reference workflow variables.
    - lifecycleRule::IoArgoprojWorkflowV1alpha1OSSLifecycleRule
    - secretKeySecret::IoK8sApiCoreV1SecretKeySelector
    - securityToken::String : SecurityToken is the user&#39;s temporary security token. For more details, check out: https://www.alibabacloud.com/help/doc-detail/100624.htm
    - useSDKCreds::Bool : UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1OSSArtifactRepository <: OpenAPI.APIModel
    accessKeySecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    bucket::Union{Nothing, String} = nothing
    createBucketIfNotPresent::Union{Nothing, Bool} = nothing
    endpoint::Union{Nothing, String} = nothing
    keyFormat::Union{Nothing, String} = nothing
    lifecycleRule = nothing # spec type: Union{ Nothing, IoArgoprojWorkflowV1alpha1OSSLifecycleRule }
    secretKeySecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    securityToken::Union{Nothing, String} = nothing
    useSDKCreds::Union{Nothing, Bool} = nothing

    function IoArgoprojWorkflowV1alpha1OSSArtifactRepository(accessKeySecret, bucket, createBucketIfNotPresent, endpoint, keyFormat, lifecycleRule, secretKeySecret, securityToken, useSDKCreds, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("accessKeySecret"), accessKeySecret)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("bucket"), bucket)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("createBucketIfNotPresent"), createBucketIfNotPresent)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("endpoint"), endpoint)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("keyFormat"), keyFormat)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("lifecycleRule"), lifecycleRule)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("secretKeySecret"), secretKeySecret)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("securityToken"), securityToken)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1OSSArtifactRepository, Symbol("useSDKCreds"), useSDKCreds)
        return new(accessKeySecret, bucket, createBucketIfNotPresent, endpoint, keyFormat, lifecycleRule, secretKeySecret, securityToken, useSDKCreds, )
    end
end # type IoArgoprojWorkflowV1alpha1OSSArtifactRepository

const _property_types_IoArgoprojWorkflowV1alpha1OSSArtifactRepository = Dict{Symbol,String}(Symbol("accessKeySecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("bucket")=>"String", Symbol("createBucketIfNotPresent")=>"Bool", Symbol("endpoint")=>"String", Symbol("keyFormat")=>"String", Symbol("lifecycleRule")=>"IoArgoprojWorkflowV1alpha1OSSLifecycleRule", Symbol("secretKeySecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("securityToken")=>"String", Symbol("useSDKCreds")=>"Bool", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1OSSArtifactRepository }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1OSSArtifactRepository[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1OSSArtifactRepository)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1OSSArtifactRepository }, name::Symbol, val)
end
