# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.WatchPathConfig

    IoArgoprojEventsV1alpha1WatchPathConfig(;
        directory=nothing,
        path=nothing,
        pathRegexp=nothing,
    )

    - directory::String
    - path::String
    - pathRegexp::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1WatchPathConfig <: OpenAPI.APIModel
    directory::Union{Nothing, String} = nothing
    path::Union{Nothing, String} = nothing
    pathRegexp::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1WatchPathConfig(directory, path, pathRegexp, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1WatchPathConfig, Symbol("directory"), directory)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1WatchPathConfig, Symbol("path"), path)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1WatchPathConfig, Symbol("pathRegexp"), pathRegexp)
        return new(directory, path, pathRegexp, )
    end
end # type IoArgoprojEventsV1alpha1WatchPathConfig

const _property_types_IoArgoprojEventsV1alpha1WatchPathConfig = Dict{Symbol,String}(Symbol("directory")=>"String", Symbol("path")=>"String", Symbol("pathRegexp")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1WatchPathConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1WatchPathConfig[name]))}

function check_required(o::IoArgoprojEventsV1alpha1WatchPathConfig)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1WatchPathConfig }, name::Symbol, val)
end
