# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.SecureHeader

    IoArgoprojEventsV1alpha1SecureHeader(;
        name=nothing,
        valueFrom=nothing,
    )

    - name::String
    - valueFrom::IoArgoprojEventsV1alpha1ValueFromSource
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1SecureHeader <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    valueFrom = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1ValueFromSource }

    function IoArgoprojEventsV1alpha1SecureHeader(name, valueFrom, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SecureHeader, Symbol("name"), name)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SecureHeader, Symbol("valueFrom"), valueFrom)
        return new(name, valueFrom, )
    end
end # type IoArgoprojEventsV1alpha1SecureHeader

const _property_types_IoArgoprojEventsV1alpha1SecureHeader = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("valueFrom")=>"IoArgoprojEventsV1alpha1ValueFromSource", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1SecureHeader }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1SecureHeader[name]))}

function check_required(o::IoArgoprojEventsV1alpha1SecureHeader)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1SecureHeader }, name::Symbol, val)
end
