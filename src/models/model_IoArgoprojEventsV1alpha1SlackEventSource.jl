# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.SlackEventSource

    IoArgoprojEventsV1alpha1SlackEventSource(;
        filter=nothing,
        metadata=nothing,
        signingSecret=nothing,
        token=nothing,
        webhook=nothing,
    )

    - filter::IoArgoprojEventsV1alpha1EventSourceFilter
    - metadata::Dict{String, String}
    - signingSecret::IoK8sApiCoreV1SecretKeySelector
    - token::IoK8sApiCoreV1SecretKeySelector
    - webhook::IoArgoprojEventsV1alpha1WebhookContext
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1SlackEventSource <: OpenAPI.APIModel
    filter = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1EventSourceFilter }
    metadata::Union{Nothing, Dict{String, String}} = nothing
    signingSecret = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    token = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }
    webhook = nothing # spec type: Union{ Nothing, IoArgoprojEventsV1alpha1WebhookContext }

    function IoArgoprojEventsV1alpha1SlackEventSource(filter, metadata, signingSecret, token, webhook, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackEventSource, Symbol("filter"), filter)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackEventSource, Symbol("metadata"), metadata)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackEventSource, Symbol("signingSecret"), signingSecret)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackEventSource, Symbol("token"), token)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1SlackEventSource, Symbol("webhook"), webhook)
        return new(filter, metadata, signingSecret, token, webhook, )
    end
end # type IoArgoprojEventsV1alpha1SlackEventSource

const _property_types_IoArgoprojEventsV1alpha1SlackEventSource = Dict{Symbol,String}(Symbol("filter")=>"IoArgoprojEventsV1alpha1EventSourceFilter", Symbol("metadata")=>"Dict{String, String}", Symbol("signingSecret")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("token")=>"IoK8sApiCoreV1SecretKeySelector", Symbol("webhook")=>"IoArgoprojEventsV1alpha1WebhookContext", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1SlackEventSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1SlackEventSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1SlackEventSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1SlackEventSource }, name::Symbol, val)
end
