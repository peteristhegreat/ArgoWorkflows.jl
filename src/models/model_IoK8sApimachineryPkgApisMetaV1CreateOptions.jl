# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions
CreateOptions may be provided when creating an API object.

    IoK8sApimachineryPkgApisMetaV1CreateOptions(;
        dryRun=nothing,
        fieldManager=nothing,
        fieldValidation=nothing,
    )

    - dryRun::Vector{String}
    - fieldManager::String
    - fieldValidation::String
"""
Base.@kwdef mutable struct IoK8sApimachineryPkgApisMetaV1CreateOptions <: OpenAPI.APIModel
    dryRun::Union{Nothing, Vector{String}} = nothing
    fieldManager::Union{Nothing, String} = nothing
    fieldValidation::Union{Nothing, String} = nothing

    function IoK8sApimachineryPkgApisMetaV1CreateOptions(dryRun, fieldManager, fieldValidation, )
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1CreateOptions, Symbol("dryRun"), dryRun)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1CreateOptions, Symbol("fieldManager"), fieldManager)
        OpenAPI.validate_property(IoK8sApimachineryPkgApisMetaV1CreateOptions, Symbol("fieldValidation"), fieldValidation)
        return new(dryRun, fieldManager, fieldValidation, )
    end
end # type IoK8sApimachineryPkgApisMetaV1CreateOptions

const _property_types_IoK8sApimachineryPkgApisMetaV1CreateOptions = Dict{Symbol,String}(Symbol("dryRun")=>"Vector{String}", Symbol("fieldManager")=>"String", Symbol("fieldValidation")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1CreateOptions }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1CreateOptions[name]))}

function check_required(o::IoK8sApimachineryPkgApisMetaV1CreateOptions)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1CreateOptions }, name::Symbol, val)
end
