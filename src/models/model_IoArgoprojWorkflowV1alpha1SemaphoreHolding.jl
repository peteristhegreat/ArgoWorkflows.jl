# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.SemaphoreHolding

    IoArgoprojWorkflowV1alpha1SemaphoreHolding(;
        holders=nothing,
        semaphore=nothing,
    )

    - holders::Vector{String} : Holders stores the list of current holder names in the io.argoproj.workflow.v1alpha1.
    - semaphore::String : Semaphore stores the semaphore name.
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1SemaphoreHolding <: OpenAPI.APIModel
    holders::Union{Nothing, Vector{String}} = nothing
    semaphore::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1SemaphoreHolding(holders, semaphore, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1SemaphoreHolding, Symbol("holders"), holders)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1SemaphoreHolding, Symbol("semaphore"), semaphore)
        return new(holders, semaphore, )
    end
end # type IoArgoprojWorkflowV1alpha1SemaphoreHolding

const _property_types_IoArgoprojWorkflowV1alpha1SemaphoreHolding = Dict{Symbol,String}(Symbol("holders")=>"Vector{String}", Symbol("semaphore")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1SemaphoreHolding }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1SemaphoreHolding[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1SemaphoreHolding)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1SemaphoreHolding }, name::Symbol, val)
end
