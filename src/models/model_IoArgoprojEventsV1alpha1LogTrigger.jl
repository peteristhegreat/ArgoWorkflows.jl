# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.LogTrigger

    IoArgoprojEventsV1alpha1LogTrigger(;
        intervalSeconds=nothing,
    )

    - intervalSeconds::String
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1LogTrigger <: OpenAPI.APIModel
    intervalSeconds::Union{Nothing, String} = nothing

    function IoArgoprojEventsV1alpha1LogTrigger(intervalSeconds, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1LogTrigger, Symbol("intervalSeconds"), intervalSeconds)
        return new(intervalSeconds, )
    end
end # type IoArgoprojEventsV1alpha1LogTrigger

const _property_types_IoArgoprojEventsV1alpha1LogTrigger = Dict{Symbol,String}(Symbol("intervalSeconds")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1LogTrigger }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1LogTrigger[name]))}

function check_required(o::IoArgoprojEventsV1alpha1LogTrigger)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1LogTrigger }, name::Symbol, val)
    if name === Symbol("intervalSeconds")
        OpenAPI.validate_param(name, "IoArgoprojEventsV1alpha1LogTrigger", :format, val, "uint64")
    end
end
