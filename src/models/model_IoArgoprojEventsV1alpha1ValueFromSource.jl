# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.events.v1alpha1.ValueFromSource

    IoArgoprojEventsV1alpha1ValueFromSource(;
        configMapKeyRef=nothing,
        secretKeyRef=nothing,
    )

    - configMapKeyRef::IoK8sApiCoreV1ConfigMapKeySelector
    - secretKeyRef::IoK8sApiCoreV1SecretKeySelector
"""
Base.@kwdef mutable struct IoArgoprojEventsV1alpha1ValueFromSource <: OpenAPI.APIModel
    configMapKeyRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1ConfigMapKeySelector }
    secretKeyRef = nothing # spec type: Union{ Nothing, IoK8sApiCoreV1SecretKeySelector }

    function IoArgoprojEventsV1alpha1ValueFromSource(configMapKeyRef, secretKeyRef, )
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ValueFromSource, Symbol("configMapKeyRef"), configMapKeyRef)
        OpenAPI.validate_property(IoArgoprojEventsV1alpha1ValueFromSource, Symbol("secretKeyRef"), secretKeyRef)
        return new(configMapKeyRef, secretKeyRef, )
    end
end # type IoArgoprojEventsV1alpha1ValueFromSource

const _property_types_IoArgoprojEventsV1alpha1ValueFromSource = Dict{Symbol,String}(Symbol("configMapKeyRef")=>"IoK8sApiCoreV1ConfigMapKeySelector", Symbol("secretKeyRef")=>"IoK8sApiCoreV1SecretKeySelector", )
OpenAPI.property_type(::Type{ IoArgoprojEventsV1alpha1ValueFromSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojEventsV1alpha1ValueFromSource[name]))}

function check_required(o::IoArgoprojEventsV1alpha1ValueFromSource)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojEventsV1alpha1ValueFromSource }, name::Symbol, val)
end
