# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.argoproj.workflow.v1alpha1.Backoff
Backoff is a backoff strategy to use within retryStrategy

    IoArgoprojWorkflowV1alpha1Backoff(;
        duration=nothing,
        factor=nothing,
        maxDuration=nothing,
    )

    - duration::String : Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \&quot;2m\&quot;, \&quot;1h\&quot;)
    - factor::String
    - maxDuration::String : MaxDuration is the maximum amount of time allowed for a workflow in the backoff strategy. It is important to note that if the workflow template includes activeDeadlineSeconds, the pod&#39;s deadline is initially set with activeDeadlineSeconds. However, when the workflow fails, the pod&#39;s deadline is then overridden by maxDuration. This ensures that the workflow does not exceed the specified maximum duration when retries are involved.
"""
Base.@kwdef mutable struct IoArgoprojWorkflowV1alpha1Backoff <: OpenAPI.APIModel
    duration::Union{Nothing, String} = nothing
    factor::Union{Nothing, String} = nothing
    maxDuration::Union{Nothing, String} = nothing

    function IoArgoprojWorkflowV1alpha1Backoff(duration, factor, maxDuration, )
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Backoff, Symbol("duration"), duration)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Backoff, Symbol("factor"), factor)
        OpenAPI.validate_property(IoArgoprojWorkflowV1alpha1Backoff, Symbol("maxDuration"), maxDuration)
        return new(duration, factor, maxDuration, )
    end
end # type IoArgoprojWorkflowV1alpha1Backoff

const _property_types_IoArgoprojWorkflowV1alpha1Backoff = Dict{Symbol,String}(Symbol("duration")=>"String", Symbol("factor")=>"String", Symbol("maxDuration")=>"String", )
OpenAPI.property_type(::Type{ IoArgoprojWorkflowV1alpha1Backoff }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoArgoprojWorkflowV1alpha1Backoff[name]))}

function check_required(o::IoArgoprojWorkflowV1alpha1Backoff)
    true
end

function OpenAPI.validate_property(::Type{ IoArgoprojWorkflowV1alpha1Backoff }, name::Symbol, val)
end
