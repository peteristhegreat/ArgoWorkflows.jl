# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""io.k8s.api.core.v1.WindowsSecurityContextOptions
WindowsSecurityContextOptions contain Windows-specific options and credentials.

    IoK8sApiCoreV1WindowsSecurityContextOptions(;
        gmsaCredentialSpec=nothing,
        gmsaCredentialSpecName=nothing,
        hostProcess=nothing,
        runAsUserName=nothing,
    )

    - gmsaCredentialSpec::String : GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    - gmsaCredentialSpecName::String : GMSACredentialSpecName is the name of the GMSA credential spec to use.
    - hostProcess::Bool : HostProcess determines if a container should be run as a &#39;Host Process&#39; container. All of a Pod&#39;s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
    - runAsUserName::String : The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
"""
Base.@kwdef mutable struct IoK8sApiCoreV1WindowsSecurityContextOptions <: OpenAPI.APIModel
    gmsaCredentialSpec::Union{Nothing, String} = nothing
    gmsaCredentialSpecName::Union{Nothing, String} = nothing
    hostProcess::Union{Nothing, Bool} = nothing
    runAsUserName::Union{Nothing, String} = nothing

    function IoK8sApiCoreV1WindowsSecurityContextOptions(gmsaCredentialSpec, gmsaCredentialSpecName, hostProcess, runAsUserName, )
        OpenAPI.validate_property(IoK8sApiCoreV1WindowsSecurityContextOptions, Symbol("gmsaCredentialSpec"), gmsaCredentialSpec)
        OpenAPI.validate_property(IoK8sApiCoreV1WindowsSecurityContextOptions, Symbol("gmsaCredentialSpecName"), gmsaCredentialSpecName)
        OpenAPI.validate_property(IoK8sApiCoreV1WindowsSecurityContextOptions, Symbol("hostProcess"), hostProcess)
        OpenAPI.validate_property(IoK8sApiCoreV1WindowsSecurityContextOptions, Symbol("runAsUserName"), runAsUserName)
        return new(gmsaCredentialSpec, gmsaCredentialSpecName, hostProcess, runAsUserName, )
    end
end # type IoK8sApiCoreV1WindowsSecurityContextOptions

const _property_types_IoK8sApiCoreV1WindowsSecurityContextOptions = Dict{Symbol,String}(Symbol("gmsaCredentialSpec")=>"String", Symbol("gmsaCredentialSpecName")=>"String", Symbol("hostProcess")=>"Bool", Symbol("runAsUserName")=>"String", )
OpenAPI.property_type(::Type{ IoK8sApiCoreV1WindowsSecurityContextOptions }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1WindowsSecurityContextOptions[name]))}

function check_required(o::IoK8sApiCoreV1WindowsSecurityContextOptions)
    true
end

function OpenAPI.validate_property(::Type{ IoK8sApiCoreV1WindowsSecurityContextOptions }, name::Symbol, val)
end
